@model KalakunjShibir.Models.DataEntry

@{
    ViewData["Title"] = "Create Booking";
    var selectedBuilding = ViewBag.SelectedBuilding as Building;
}

<div class="container-fluid p-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="bi bi-calendar-plus"></i> Create New Booking
            </h5>
            @if (ViewBag.SelectedBuilding != null)
            {
                <span class="badge bg-light text-dark">
                    Building: @selectedBuilding.Name | Available Rooms: @(ViewBag.AvailableRooms?.Count ?? 0)
                </span>
            }
        </div>

        <div class="card-body">
            <form asp-action="Create" id="bookingForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <div class="row">
                    <div class="col-md-6">
                        <!-- Left Column - Building and Room Selection -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">Room Selection</h6>
                            </div>
                            <div class="card-body">
                                <div class="form-group mb-3">
                                    <label asp-for="BuildingId" class="control-label required">Building</label>
                                    <select asp-for="BuildingId" class="form-select" asp-items="ViewBag.Buildings"
                                            onchange="loadAvailableRooms()">
                                        <option value="">-- Select Building --</option>
                                    </select>
                                    <span asp-validation-for="BuildingId" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="selectedRooms" class="control-label required">Room Numbers</label>
                                    <select id="selectedRooms" name="selectedRooms" class="form-select" multiple size="10"
                                            onchange="updateSelectedRooms()">
                                        @if (ViewBag.AvailableRooms != null)
                                        {
                                            @foreach (var room in ViewBag.AvailableRooms)
                                            {
                                                <option value="@room.Value">@room.Text</option>
                                            }
                                        }
                                    </select>
                                    <small class="text-muted">
                                        Hold Ctrl (Windows) or Command (Mac) to select multiple rooms<br />
                                        Selected: <span id="selectedRoomsCount" class="badge bg-primary">0</span> rooms
                                    </small>
                                    <div id="roomError" class="text-danger"></div>
                                </div>

                                <!-- Selected Rooms Summary -->
                                <div id="selectedRoomsSummary" class="alert alert-info d-none">
                                    <strong>Selected Rooms:</strong>
                                    <div id="selectedRoomsList"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Guest Information -->
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Guest Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="form-group mb-3">
                                    <label asp-for="Name" class="control-label required">Guest Name</label>
                                    <input asp-for="Name" class="form-control" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Village" class="control-label required">Village</label>
                                    <input asp-for="Village" class="form-control" />
                                    <span asp-validation-for="Village" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Location" class="control-label">Current Location</label>
                                    <input asp-for="Location" class="form-control" />
                                    <span asp-validation-for="Location" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <div class="form-check">
                                        <input asp-for="IsNRI" class="form-check-input" />
                                        <label class="form-check-label" asp-for="IsNRI">NRI Guest</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <!-- Right Column - Booking Dates -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">Booking Dates</h6>
                            </div>
                            <div class="card-body">
                                <div class="form-group mb-3">
                                    <label asp-for="StartDate" class="control-label required">Check-in Date</label>
                                    <input asp-for="StartDate" class="form-control" type="date"
                                           onchange="updateDateInfo(); loadAvailableRooms();" />
                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="EndDate" class="control-label required">Check-out Date</label>
                                    <input asp-for="EndDate" class="form-control" type="date"
                                           onchange="updateDateInfo(); loadAvailableRooms();" />
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>

                                <!-- Date Range Info -->
                                <div id="dateRangeInfo" class="alert alert-info">
                                    <div class="row">
                                        <div class="col">
                                            <strong>Duration:</strong>
                                            <span id="totalDays">0</span> days
                                        </div>
                                        <div class="col text-end">
                                            <strong>Total Rooms:</strong>
                                            <span id="totalRooms">0</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Room Availability Status -->
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Room Availability</h6>
                            </div>
                            <div class="card-body">
                                <div id="availabilityStatus" class="alert alert-info d-none">
                                    Checking room availability...
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary" onclick="return validateForm()">
                        <i class="bi bi-save"></i> Create Booking
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <style>
        .required:after {
            content: " *";
            color: red;
        }

        select[multiple] {
            height: auto;
            min-height: 200px;
        }

            select[multiple] option:checked {
                background-color: var(--primary-color) linear-gradient(0deg, var(--primary-color) 0%, var(--primary-color) 100%);
                color: white;
            }

        .card-header h6 {
            margin-bottom: 0;
            font-weight: 600;
        }
    </style>

    <script>
        $(document).ready(function () {
            // Set default dates if not set
            if (!$('#StartDate').val()) {
                $('#StartDate').val(new Date().toISOString().split('T')[0]);
            }
            if (!$('#EndDate').val()) {
                var tomorrow = new Date();
                tomorrow.setDate(tomorrow.getDate() + 1);
                $('#EndDate').val(tomorrow.toISOString().split('T')[0]);
            }

            updateDateInfo();

            // If building is pre-selected, load rooms
            var buildingId = $('#BuildingId').val();
            if (buildingId) {
                loadAvailableRooms();
            }
        });

        function loadAvailableRooms() {
            var buildingId = $('#BuildingId').val();
            var startDate = $('#StartDate').val();
            var endDate = $('#EndDate').val();
            var statusDiv = $('#availabilityStatus');

            if (!buildingId || !startDate || !endDate) {
                return;
            }

            statusDiv.removeClass('d-none alert-success alert-danger')
                .addClass('alert-info')
                .html('<i class="bi bi-arrow-repeat"></i> Checking room availability...');

            $.get('/Data/GetAvailableRooms', {
                    buildingId: buildingId,
                    startDate: startDate,
                    endDate: endDate
                    })
                    .done(function (response) {
                            if (response.success) {
                                var roomSelect = $('#selectedRooms');
                                roomSelect.empty();
            
                                response.rooms.forEach(function (room) {
                                        roomSelect.append($('<option></option>')
                                        .val(room)
                                        .text(`Room ${room}`));
                                 });

                            updateSelectedRooms();

                                statusDiv.removeClass('alert-info alert-danger')
                                    .addClass('alert-success')
                                    .html(`<i class="bi bi-info-circle"></i> ${response.rooms.length} rooms available in ${response.buildingName}`);
                            } else {
                                statusDiv.removeClass('alert-info alert-success')
                                    .addClass('alert-danger')
                                    .html('<i class="bi bi-exclamation-triangle"></i> ' + (response.message || 'Error loading available rooms'));
                            }
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        console.error("Error details:", {
                            status: jqXHR.status,
                            statusText: jqXHR.statusText,
                            responseText: jqXHR.responseText,
                            textStatus: textStatus,
                            errorThrown: errorThrown
                        });
                        
                        statusDiv.removeClass('alert-info alert-success')
                            .addClass('alert-danger')
                            .html('<i class="bi bi-exclamation-triangle"></i> Error checking room availability');
                    });
        }

        function updateSelectedRooms() {
            var selectedRooms = $('#selectedRooms').val();
            var count = selectedRooms ? selectedRooms.length : 0;
            $('#selectedRoomsCount').text(count);
            $('#totalRooms').text(count);

            var summary = $('#selectedRoomsSummary');
            var list = $('#selectedRoomsList');

            if (count > 0) {
                list.html(selectedRooms.map(room => `Room ${room}`).join(', '));
                summary.removeClass('d-none');
            } else {
                list.html('');
                summary.addClass('d-none');
            }
        }

        function updateDateInfo() {
            var startDate = new Date($('#StartDate').val());
            var endDate = new Date($('#EndDate').val());

            if (startDate && endDate) {
                var days = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24)) + 1;
                $('#totalDays').text(days);
                $('#dateRangeInfo').show();
            } else {
                $('#dateRangeInfo').hide();
            }
        }

        function validateForm() {
            var isValid = true;
            var errors = [];

            // Check building selection
            if (!$('#BuildingId').val()) {
                errors.push('Please select a building');
                isValid = false;
            }

            // Check room selection
            var selectedRooms = $('#selectedRooms').val();
            if (!selectedRooms || selectedRooms.length === 0) {
                errors.push('Please select at least one room');
                isValid = false;
            }

            // Validate dates
            var startDate = new Date($('#StartDate').val());
            var endDate = new Date($('#EndDate').val());

            if (startDate > endDate) {
                errors.push('Check-out date must be after check-in date');
                isValid = false;
            }

            if (!isValid) {
                alert(errors.join('\n'));
            }

            return isValid;
        }
    </script>
}